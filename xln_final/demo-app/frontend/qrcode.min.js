// Minimal QR Code generator for demo
var QRCode = {
    toCanvas: function(canvas, text, options) {
        options = options || {};
        const size = options.width || 200;
        const margin = options.margin || 2;
        const dark = (options.color && options.color.dark) || '#000';
        const light = (options.color && options.color.light) || '#FFF';
        
        const ctx = canvas.getContext('2d');
        canvas.width = size;
        canvas.height = size;
        
        // For demo: just create a simple pattern with the merchant ID
        ctx.fillStyle = light;
        ctx.fillRect(0, 0, size, size);
        
        // Draw border
        ctx.strokeStyle = dark;
        ctx.lineWidth = 4;
        ctx.strokeRect(margin, margin, size - 2*margin, size - 2*margin);
        
        // Draw text in center
        ctx.fillStyle = dark;
        ctx.font = 'bold 14px monospace';
        ctx.textAlign = 'center';
        ctx.textBaseline = 'middle';
        
        // Split text into lines
        const lines = text.match(/.{1,12}/g) || [text];
        const lineHeight = 20;
        const startY = (size - lines.length * lineHeight) / 2;
        
        lines.forEach((line, i) => {
            ctx.fillText(line, size/2, startY + i * lineHeight + lineHeight/2);
        });
        
        // Add corner squares for QR effect
        const cornerSize = 30;
        ctx.fillStyle = dark;
        
        // Top-left
        ctx.fillRect(margin, margin, cornerSize, cornerSize);
        ctx.fillStyle = light;
        ctx.fillRect(margin + 8, margin + 8, cornerSize - 16, cornerSize - 16);
        ctx.fillStyle = dark;
        ctx.fillRect(margin + 12, margin + 12, cornerSize - 24, cornerSize - 24);
        
        // Top-right
        ctx.fillStyle = dark;
        ctx.fillRect(size - margin - cornerSize, margin, cornerSize, cornerSize);
        ctx.fillStyle = light;
        ctx.fillRect(size - margin - cornerSize + 8, margin + 8, cornerSize - 16, cornerSize - 16);
        ctx.fillStyle = dark;
        ctx.fillRect(size - margin - cornerSize + 12, margin + 12, cornerSize - 24, cornerSize - 24);
        
        // Bottom-left
        ctx.fillStyle = dark;
        ctx.fillRect(margin, size - margin - cornerSize, cornerSize, cornerSize);
        ctx.fillStyle = light;
        ctx.fillRect(margin + 8, size - margin - cornerSize + 8, cornerSize - 16, cornerSize - 16);
        ctx.fillStyle = dark;
        ctx.fillRect(margin + 12, size - margin - cornerSize + 12, cornerSize - 24, cornerSize - 24);
    }
};